#!/usr/bin/env python3

import urllib.request
import json
import codecs
import os.path
import arrow
import heapq

def ftoc ( c ) :
    return ( c - 32 ) * 5 / 9

def itom ( i ) :
    return i * 25.4

reader = codecs.getreader( 'utf8' )

KEYCHAIN = os.path.expanduser( '~/.keychain' )
GEOLOCATION = os.path.expanduser( '~/.geolocation' )

APIKEY = json.load( open( KEYCHAIN ) )[ 'api.forecast.io' ]

LONGITUDE , LATITUDE = json.load( open( GEOLOCATION ) )
TIME = arrow.utcnow( ).format( 'YYYY-MM-DDTHH:mm:ssZZ' )

URL = 'https://api.forecast.io/forecast/{}/{},{},{}'.format( APIKEY , LONGITUDE , LATITUDE , TIME )

_data = json.load( reader( urllib.request.urlopen( URL ) ) )

HALFHOUR = 60 * 60 // 2
NOW = arrow.now( ).timestamp - HALFHOUR

data = heapq.nsmallest( 3 , filter( lambda x : x['time'] >= NOW , _data['hourly']['data'] ) , key = lambda x : x['time'] )
t = list( map( round , map( ftoc , map( lambda x : x['apparentTemperature'] , data ) ) ) )
p = list( map( lambda x : round( 100 * x['precipProbability'] ) , data ) )
i = list( map( lambda x : round( itom( x['precipIntensity'] ) , 1 ) , data ) )

if all( map( lambda x : x == 0 , p ) ) :
    print( '☀ {},{},{}'.format( *t , *p , *i ) )
else:
    print( '☔ {},{},{} % {},{},{} ☁ {:.1f},{:.1f},{:.1f}'.format( *t , *p , *i ) )
