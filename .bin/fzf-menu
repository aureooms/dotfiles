#!/usr/bin/env python3

import sys
import os
import argparse
import json
from shlex import quote
from tempfile import mkstemp
from subprocess import call

def main():

    # should do something more flexible that forwards arguments to xterm or fzf
    parser = argparse.ArgumentParser(description='Fzf menu using xterm.')
    parser.add_argument('--lines', type=int, default=10, help='Number of lines')
    parser.add_argument('--columns', type=int, default=100, help='Number of columns')
    parser.add_argument('--fzf', type=str, default=os.path.expanduser('~/.fzf/bin/fzf'), help='Path to fzf program')
    parser.add_argument('--border', type=int, default=0, help='Window border width')
    parser.add_argument('--bg', type=str, default='#1a1a1a', help='Window background color')

    args, rest = parser.parse_known_args()

    _, outputname = mkstemp()

    cmd = ['xterm']
    cmd += ['-class', 'fzf-menu']
    cmd += ['-geometry', '{}x{}'.format(args.columns,args.lines+2)]
    cmd += ['-w', str(args.border)]
    cmd += ['-bg', args.bg]
    cmd += ['-e']

    fzfcmd = args.fzf
    fzfcmd += ' '
    fzfcmd += ' '.join(map(quote,rest))
    fzfcmd += ' > {}'.format(quote(outputname))

    pipe = not sys.stdin.isatty()

    if pipe :

        _, inputname = mkstemp()
        with open(inputname, 'w') as f:
            f.write(sys.stdin.read())

        fzfcmd += ' < {}'.format(quote(inputname))

    cmd += [fzfcmd]

    rc = call(cmd)

    if pipe :

        os.remove(inputname)

    with open(outputname) as f:
        result = f.read()

    print(result, end='')

    os.remove(outputname)

    return rc


def console_main():
    sys.exit(main())

if __name__ == '__main__':
    console_main()
