#!/usr/bin/env python3

# script to compute the orientation of a tablet device
# requires python-pyudev
# stolen from https://github.com/freundTech/surface-tools/blob/bfe4483d48c4ec858c30c6cbd486847dcec73fc0/autorotate/autorotate

import pyudev

sensorname="accel_3d"

def twos_comp(val):
    if val & (1 << (16-1)) != 0: val = val - (1 << 16)
    return val

def getOrientation(accelX, accelY): #, accelZ):
    absAccelX = abs(accelX)
    absAccelY = abs(accelY)
    # absAccelZ = abs(accelZ)

    if absAccelY >= 3 * absAccelX and absAccelY >= 200:
        return "inverted" if accelY > 0 else "normal"
    elif absAccelX >= 3 * absAccelY and absAccelX >= 200:
        return "left" if accelX > 0 else "right"

    return "flat"

def checkRotation(device):
    accelX = twos_comp(device.attributes.asint("in_accel_x_raw"))
    accelY = twos_comp(device.attributes.asint("in_accel_y_raw"))
    # accelZ = twos_comp(device.attributes.asint("in_accel_z_raw"))

    return getOrientation(accelX, accelY) #, accelZ)

if __name__ == "__main__":
    context = pyudev.Context()
    device = None
    for device in context.list_devices(subsystem="iio").match_attribute("name", sensorname): break
    assert device is not None
    path = device.device_path
    device = pyudev.Devices.from_path(context, path)
    print(checkRotation(device))
