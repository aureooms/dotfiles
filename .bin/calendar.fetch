#!/usr/bin/env python3

import sys
import os.path
import traceback
import hashlib
import urllib.request
import urllib.error
import arrow
import ics
import json

log = lambda *x, **y: print(*x, **y, file=sys.stderr)

CACHE = os.path.expanduser('~/.cache/calendar/{}')
CALENDARS = os.path.expanduser('~/.config/calendar/config')

try:
    os.makedirs(CACHE.format(''))
except:
    pass

with open(CALENDARS, 'r') as fd:

    _calendars = json.load( fd )['calendars']

for _calendar in _calendars:

    url = _calendar['url']

    try:

        log('downloading {}'.format(url))

        data = urllib.request.urlopen(url).read()
        # to check that we can parse the data
        calendar = ics.Calendar(data.decode())

        h = hashlib.sha1(url.encode()).hexdigest()
        filename = CACHE.format(h)

        log('writing {} to {}'.format(url, filename))

        with open(filename, 'wb') as fd:

            fd.write(data)

    except urllib.error.URLError as err:

        log('Error opening url: {}'.format(url))
        log(err)
        traceback.print_tb(err.__traceback__, file=sys.stderr)

    except ics.parse.ParseError as err:

        log('Error parsing file: {}'.format(url))
        log(err)
        traceback.print_tb(err.__traceback__, file=sys.stderr)

    except FileNotFoundError as err:

        log('Error writing file for {}'.format(url))
        log(err)
        traceback.print_tb(err.__traceback__, file=sys.stderr)
