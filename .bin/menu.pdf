#!/usr/bin/env python3
# vi:syntax=python

prompt = ['dmenu_center', '--rest', '-i', '-t', '-p', 'pdf', '-sb', '#545151', '-l', '10']
querystring = 'ext:pdf OR ext:djvu'
formatstring = '{title} -- {filename} -- {url}'
sortby = 'filename'

import os
import sys
import logging
from recoll import recoll, rclextract
from subprocess import check_output, call

log = logging.getLogger(__name__)
log.setLevel(logging.INFO)

handler = logging.StreamHandler(sys.stdout)
handler.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
handler.setFormatter(formatter)
log.addHandler(handler)

db = recoll.connect()

query = db.query()

if sortby:
	query.sortby(sortby)

n = query.execute(querystring)

log.info('{} results'.format(n))

docs = list(query)

def genline(i, doc, formatstring=formatstring):
	return formatstring.format_map(doc.items()) + ' ' + str(i)

lines = (genline(i, doc) for i, doc in enumerate(docs))

raw = '\n'.join(lines).encode()

try:
	result = check_output(prompt, input=raw)

except Exception as e:
	log.exception('dmenu failed')
	sys.exit(1)

line = result.decode()[:-1]

try:

	i = int(line.split()[-1])

except Exception as e:
	log.exception('could not parse line number')
	sys.exit(2)

try:
	doc = docs[i]
except IndexError as e:
	log.exception('index not in range')
	sys.exit(3)

if genline(i, doc) != line:
	log.error('lines do not match')
	sys.exit(4)

if doc.ipath:
	extractor = rclextract.Extractor(doc)
	path = extractor.idoctofile(doc.ipath, doc.mimetype).decode()
	call(['xdg-open', path])
	if path[:5] == '/tmp/':
		log.info('deleting {}'.format(path))
		# just in case someone screws up upstreams
		os.remove(path)

else:
	path = doc.url[7:]
	call(['xdg-open', path])

