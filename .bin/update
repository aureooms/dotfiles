#!/usr/bin/env bash

if [ $(id -u) == "0" ] ; then
  echo '! must NOT be run as root'
  exit 57
fi

echo '+ Parsing arguments'

### PARSING BEGIN ###

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
pull=false
update=true
software=false
services=false
vim=false
delay=false

function show_help ( ) {
  echo '! No help for the moment :(' ;
  echo ' > update script file is '"${BASH_SOURCE}"
}

while getopts "h?upasvUPASV" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    u)  update=true
        ;;
    p)  pull=true
        ;;
    a)  software=true
        ;;
    s)  services=true
        ;;
    v)  vim=true
        ;;
    w)  delay=true
        ;;
    U)  update=false
        ;;
    P)  pull=false
        ;;
    A)  software=false
        ;;
    S)  services=false
        ;;
    V)  vim=false
        ;;
    W)  delay=true
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

### PARSING END ###

echo '+ Looking up dotfiles'
DOTFILES="$(cat "$HOME/.config/dotfiles/location")"

if [ "$DOTFILES" = '' ] ; then
  echo '! Could not find dotfiles :('
  echo ' > Try running boostrap/dotfiles-udpate in the dotfiles directory!'
  echo ' > The update script should find the dotfiles after that :)'
  exit 58
fi

echo ' * dotfiles @ '"$DOTFILES"

echo '+ Go to dotfiles'
cd "$DOTFILES" || exit "$?"

if $pull ; then

  echo '+ Pull dotfiles'
  git pull >/dev/null || exit "$?"

fi

if $software ; then

  echo '+ Clean up old software'
  sudo sh "$DOTFILES"/bootstrap/update-clean || exit "$?"

  echo '+ Install and update software'
  sh "$DOTFILES"/bootstrap/update-software || exit "$?"

fi

if $update ; then

  echo '+ Update dotfiles'
  sh "$DOTFILES"/bootstrap/dotfiles-update -f || exit "$?"

fi

if $services ; then

  echo '+ Enable ntpd'
  sudo systemctl enable ntpd # clock sync
  sudo systemctl start ntpd
  echo '+ Enable atd'
  sudo systemctl enable atd # at program
  sudo systemctl start atd

  echo '+ Restart services'
  services.restart || exit "$?"

fi

if $vim ; then

  echo '+ Update vim pluggins'
  vim.update || exit "$?"

fi

if $delay ; then

  sleep 3

fi
